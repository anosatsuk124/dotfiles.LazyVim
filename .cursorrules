- コマンド実行が必要な場合は、コマンドを記述してください。
  - 権限がなければ要求してください。

- `git commit` を行う際は、以下のルールに従ってください。
  - `git commit`の前には必ず承諾を得てください。
  - 必ずcommit前に以下のコマンドを実行してください(承諾は要りません)。
    - `git status` で変更されたファイルなどを確認してください。
    - `git diff` で変更されたファイルなどを確認してください。
    - `git add` で変更されたファイルなどをステージングエリアに追加してください。
  - コミットは可能な限り小さく、単一の変更に対して行ってください。
  - コミットメッセージは、以下のフォーマットで記述してください。
    - `[<コミットタイプ>] <コミットメッセージ>`
    - 例: `[FIX] バグ修正`
  - コミットタイプは以下のいずれかを指定してください。
    - `FIX`: バグ修正
    - `ADD`: 新規機能追加
    - `UPDATE`: 機能修正
    - `REMOVE`: 機能削除
    - `DOCS`: ドキュメントのみ変更
    - `STYLE`: コードの意味に影響を与えない変更
    - `REFACTOR`: バグ修正や機能追加を行わないコード変更
    - `PERF`: パフォーマンスを向上させるコード変更
    - `TEST`: テストコードの追加・修正
    - `CHORE`: ビルドプロセスやドキュメント生成などの補助ツールやライブラリの変更
  - コミットメッセージは、英語で記述してください。
  - コミットメッセージは、大文字で始めてください。
  - コミットメッセージは、ピリオドで終わらないでください。
  - コミットメッセージは、コードの変更内容を簡潔に記述してください。
  - コミットメッセージは、コードの変更理由を明確に
